sudo: false
language: cpp
cache: ccache
matrix:
  include:

  # Ubuntu, g++-8
  - os: linux
    compiler: gcc
    addons:
      apt:
        sources:
        - ubuntu-toolchain-r-test
        packages: 
          - libboost1.55-all-dev
          - g++-8
          - gcc-8
    env:
    - MATRIX_EVAL="CC=gcc-8 && CXX=g++-8"
    - LABEL="linux"
    - _DEPLOYABLE="true"
    - STRIP="strip"

  # Ubuntu, g++-7
  - os: linux
    compiler: gcc
    addons:
      apt:
        sources:
        - ubuntu-toolchain-r-test
        packages: 
          - libboost1.55-all-dev
          - g++-7
          - gcc-7
    env:
    - MATRIX_EVAL="CC=gcc-7 && CXX=g++-7"
    - LABEL="linux-g++-7"
    - STRIP="strip"

  # Ubuntu, clang-6
  - os: linux
    compiler: clang
    addons:
      apt:
        sources:
        - ubuntu-toolchain-r-test
        - llvm-toolchain-trusty-6.0
        packages: 
          - libboost1.55-all-dev
          - clang-6.0
          - libstdc++-7-dev
    env:
    - MATRIX_EVAL="CC=clang-6.0 && CXX=clang++-6.0"
    - LABEL="linux-clang-6"
    - STRIP="strip"

  ## OSX, g++-8
  - os: osx
    osx_image: xcode10
    compiler: gcc
    env:
    - MATRIX_EVAL="CC=gcc-8 && CXX=g++-8"
    - LABEL="osx-g++-8"
    - STRIP="strip"

  # OSX, g++-7
  - os: osx
    osx_image: xcode10
    compiler: gcc
    env:
    - MATRIX_EVAL="CC=gcc-7 && CXX=g++-7"
    - LABEL="osx-g++-7"
    - STRIP="strip"

  # OSX, clang
  - os: osx
    osx_image: xcode10
    compiler: clang
    env:
    - MATRIX_EVAL="CC=/usr/local/opt/llvm/bin/clang && CXX=/usr/local/opt/llvm/bin/clang++"
    - LABEL="osx"
    - _DEPLOYABLE="true"
    - STRIP="strip"

  # Arm (aarch64) cross compile
  - os: linux
    env:
    - MATRIX_EVAL="CC=aarch64-linux-gnu-gcc && CXX=aarch64-linux-gnu-g++"
    - LABEL="aarch64"
    - _DEPLOYABLE="true"
    - STRIP="aarch64-linux-gnu-strip"

before_install:
- eval $MATRIX_EVAL

install:
# Need to uninstall oclint to get newer gcc installed https://github.com/travis-ci/travis-ci/issues/8826
- if [[ "${LABEL:0:3}" == "osx" ]]; then brew cask uninstall --force oclint || true ; fi

# Need a newer version of llvm to link against to get std::filesystem / std::experimental::filesystem 
- if [[ "${LABEL:0:3}" == "osx" ]]; then brew install llvm || brew upgrade llvm ; fi

# Neeed to install ccache
- if [[ "${LABEL:0:3}" == "osx" ]]; then brew install ccache ; fi
- if [[ "${LABEL:0:3}" == "osx" ]]; then export PATH="/usr/local/opt/ccache/libexec:$PATH" ; fi

# Install the correct gcc version
- if [[ "$LABEL" == "osx-g++-8" ]]; then brew install gcc@8 ; fi
- if [[ "$LABEL" == "osx-g++-7" ]]; then brew install gcc@7 ; fi

- if [[ "$LABEL" == "aarch64" ]]; then export BASEDIR=`pwd` ; fi
- if [[ "$LABEL" == "aarch64" ]]; then cd $HOME ; fi
- if [[ "$LABEL" == "aarch64" ]]; then wget https://armkeil.blob.core.windows.net/developer/Files/downloads/gnu-a/8.2-2018.08/gcc-arm-8.2-2018.08-x86_64-aarch64-linux-gnu.tar.xz ; fi
- if [[ "$LABEL" == "aarch64" ]]; then wget http://sourceforge.net/projects/boost/files/boost/1.55.0/boost_1_55_0.tar.gz ; fi
- if [[ "$LABEL" == "aarch64" ]]; then mkdir toolchain && cd toolchain ; fi
- if [[ "$LABEL" == "aarch64" ]]; then tar xfv ../gcc-arm-8.2-2018.08-x86_64-aarch64-linux-gnu.tar.xz >/dev/null ; fi
- if [[ "$LABEL" == "aarch64" ]]; then cd gcc-arm-8.2-2018.08-x86_64-aarch64-linux-gnu ; fi
- if [[ "$LABEL" == "aarch64" ]]; then tar zxvf ../../boost_1_55_0.tar.gz >/dev/null ; fi
- if [[ "$LABEL" == "aarch64" ]]; then cd boost_1_55_0 ; fi
- if [[ "$LABEL" == "aarch64" ]]; then ./bootstrap.sh ; fi
- if [[ "$LABEL" == "aarch64" ]]; then curl https://raw.githubusercontent.com/IB313184/Bitcoinnova_0.12.0.1280/master/scripts/fix_boost_aarch64.sh | sh ; fi
- if [[ "$LABEL" == "aarch64" ]]; then ./b2 toolset=gcc-aarch64 --with-system --with-filesystem --with-thread --with-date_time --with-chrono --with-regex --with-serialization --with-program_options >/dev/null; fi
- if [[ "$LABEL" == "aarch64" ]]; then export CUSTOM_BOOST_ROOT="-DBOOST_ROOT=`pwd`" ; fi
- if [[ "$LABEL" == "aarch64" ]]; then export CUSTOM_TOOLCHAIN="-DCMAKE_TOOLCHAIN_FILE=../scripts/cross-aarch64.cmake" ; fi
- if [[ "$LABEL" == "aarch64" ]]; then export STRIP="$HOME/toolchain/gcc-arm-8.2-2018.08-x86_64-aarch64-linux-gnu/bin/aarch64-linux-gnu-strip" ; fi
- if [[ "$LABEL" == "aarch64" ]]; then cd $BASEDIR ; fi

script:
- eval $MATRIX_EVAL
- mkdir build && cd build
- cmake -DCMAKE_BUILD_TYPE=Release -DSTATIC=true .. ${CUSTOM_TOOLCHAIN} ${CUSTOM_BOOST_ROOT}
- make -j2

before_deploy:
- if [[ "${TRAVIS_TAG}" == "" ]]; then export TRAVIS_TAG=${TRAVIS_COMMIT} ; fi
- cd src
- TARGETS="Bitcoinnovad miner zedwallet Bitcoinnova-service zedwallet-beta cryptotest wallet-api"
- ${STRIP} ${TARGETS}
- rm -rf bitcoinnova-${TRAVIS_TAG} 
- mkdir bitcoinnova-${TRAVIS_TAG}
- cp ${TARGETS} bitcoinnova-${TRAVIS_TAG}/
- cp ../../LICENSE bitcoinnova-${TRAVIS_TAG}/
- tar cvfz bitcoinnova-${TRAVIS_TAG}-${LABEL}.tar.gz bitcoinnova-${TRAVIS_TAG}/
- rm -rf builds
- mkdir builds
- cp bitcoinnova-${TRAVIS_TAG}-${LABEL}.tar.gz builds
- cd builds

deploy:
  - provider: releases
    api_key:
      secure: GgrsuPXBEuPviJ2s8IBI6Y2B/GpyP22I0wY4UtKNe5mIyb3d+FkoFDL1r3JU3u9kJM610nhIZoSNuelxjYe1B48WmD4ygT+CQeGNGlDQws5HjhT4vG52s8LF21kActWXfgz9iK+mrVwvxlXfZfYGPw7RbCGQaJ7ItoZYTmOLQye4za+nkym1Aux+IA7QmezItxPRQDGk5p/AoPOBBSlkx8Bn17FW0w3o1qTPuqdYMx+QPLi08/U0MWC8W/bwHNrwoCWFlSqowgJZ5iS+0MychdY/uK8LQq9tLr1+4hSZ/3Y/pZbHlQ0fMrtnNxdK4p3wWTudnlzuh1y5PUW8lbOt2xh+eh1flhWAX3/XElV2j53zD8aCXnHXIPia2h0ABINOkSeVselucxUYHGlYQRdzeA0xnqfGA/MdXTeP+C6m2+LByW4udz6sGaVbgdypW5mA/BQj5EC5nBAi5VQ1YpHwRkbV1SZH8TlsOxPyVPkgEwCCAuSw3gCbpRCjdtksoBm4E97MPnfbUU4/7e3yNYA485uxaONL181s+xhOP0ZlxshZ6VQMHA6k5UgubQjF4pIzRfXQNU2njT8G6lel4zjrZhCWRxhj6vrP12O9XkckKtm9ir7AHPCKdXkpUP9wRAkhDiDsiafQPURTEdLpiY9oKuOPAl6VrxyYNa75EhXP2h4=
    file:
      - bitcoinnova-${TRAVIS_TAG}-${LABEL}.tar.gz
    skip_cleanup: true
    on:
      repo: IB313184/Bitcoinnova_0.12.0.1280
      tags: true
      condition: "$_DEPLOYABLE = true"

  - provider: s3
    access_key_id:
      secure: DBwV4byu9+n8ZgIg/ncZBlAKAVrhYe4ozCgIk8oxd4ow4sxvyQ7bmUsRKmBwjmRskStu60xVl2OYHU5rK1fc07a8MC/68jhaa1H3qqwaoowFskDF5PW6LVQEu7VlHJqszI821I/m2vDQhXw87RDP6hIqlsXAth6SNUQvr2xGn3GYG8zgUOURVbjU7fbi2q1dvS2Q5Tx7qZ38q+DxV/5raoQRdccWhk0R7xvsTMC3LkeTc8XF7HrYw+n6/tF5fkx3Vnp3MJNZtqBvljNVxbFcHUHvuwKIhDZXpurUQwWarrxQ9YB2Wm+622EZq0UnJP+N56+qYP+A035MIDuTx7Lf6mkNR0I+cDaU0ywM5avm0oXvgfDVQwFTYCwhkMtmrHsISfkFjIZCp8ZAsGEm/rdwlwUP8Mk9kGAFMJuCfEOK5vAyMiKasXEEGFcYxvD92HQPMIjizGyYBdw0BwjgVut48dLFM3VlDlN8GvGoVXllsv0UfepW5JkJWT9XBuF2T+M74U0X/f+E+g6whLRVGZ0tjSzhga9wTKfP0QyWdxzu9U8kJDaYt9Gvca0Xt8VFCT8s9ij0XsNOtOYUo/DQmCn5/okGsVVXgT5KRUt462gJ7IZUX3Ti09KgdQsFfAu2BllaPLvqmu62FwhFdYmkfL9fWgzfE5F2A6HZbV2Di63dew4=
    secret_access_key:
      secure: cmy8eYUr8Hpii10a5fsTzhsBT5YNrQp5DCqaGCl6Ebd4T7t4+DpaHbERSUWjM6JCt9z1nmipT976ViJrnWUCBIxhxS/GAKbLPSSXxe6L7mA97ucwTLsICxZaWYjG/PkZl/7bIXH9GIslkxU/490ghciAk9AjNNjkX2jVt/62JOQiuzQomQvwg++3ececI3SfNKm+pNtL789no309PoEuyFewD0C/g15rsOvNoAZqNREcrSOPYJQXph4KWda/hBSWKIHU+kOKWUcdQQBKOchAoJQGJIFRwj4dDhuUwqb9Fz9DSdu6vyujNAOicUxKmrWV2KTNC2mGVK7Oa7dH2oDWV4WcBpI50bZDYghE4e4lz14mV3xkeuQaGGVF21d63jPxEzbXsLwObKtjx+dNqXpFWaVwyGflEkddvLIyqFd8CUtI45kTAHuoeQg0uRG/ols09AfW5iezHkOI50XxWZLZUwfrScTix0vSRwguHRCEnSolIylu36zMg8+azfmKY/aqLt1XidHGDtDjvNvoWZkKimlhC1thGXqzB+e86sTjs3ETdWuaiM/Pi6zJGcLVEnd7hxF98yxQVpJ4zJZzc5Lrc1yomRWkxgWpM+2dHfUomIYj+WSdsJw3YlNmDFL6Ymizw483FBUhStF0BCSSDafC1YatIx5XRUEoElzMz0zIczs=
    bucket: bitcoinnova
    skip_cleanup: true
    acl: public_read
    region: us-east-2
    upload-dir: bitcoinnova
    local-dir: src/builds
    on:
      repo: ib313184/bitcoinnova_0.12.0.1280
      all_branches: true
